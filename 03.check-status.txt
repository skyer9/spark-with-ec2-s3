
Flintrock 상태 확인하기



생성한 스파크 클러스터에 접속해서 상태를 확인한다.

1. 스파크 클러스터를 생성한다.

   $ flintrock launch 클러스터이름

   이번에는 생성한 클러스터를 확인해야 하므로 아래 질문이 나오면 n 을 입력한다.

   Do you want to terminate the 2 instances created by this operation? [Y/n]:

2. 클러스터를 실행한다.

   $ flintrock login 클러스터이름

   로컬서버와 스파크 클러스터에 설치된 스파크의 버전이 동일한지 확인한다.

   <SparkMaster> $ spark-submit --version

   클러스터를 시작한다.

   <SparkMaster> $ spark/sbin/start-all.sh

   AWS 콘솔에서 마스터노드에 등록된 보안그룹 중 flintrock 으로 등록된 것에,
   브라우저를 실행할 아이피(ex PC 아이피) 에 대해 8080-8081 포트를 열도록 등록해준다.
   브라우저로 아래 주소를 열어서 클러스터 상태를 확인할 수 있다.

   http://<마스터 노드 퍼블릭 아이피>:8080/

3. 로컬서버에서 스파크 클러스터를 실행한다.

   로컬서버로 이동한다.

   <SparkMaster> $ exit

   AWS 콘솔에서 마스터노드에 등록된 보안그룹 중 flintrock 으로 등록된 것에,
   로컬서버 내부아이피로부터의 7077 포트 접속허용을 등록해준다.

   $ vi test.py
   ----------------------------------------------------------------------------
   import pyspark
   sc = pyspark.SparkContext.getOrCreate()
   sc.stop()
   ----------------------------------------------------------------------------

   로컬서버에서 아래 명령을 실행한다.

   $ spark-submit --master spark://<마스터노드의 내부 아이피>:7077 test.py

4. 마스터노드의 내부 아이피를 등록한다.

   스파크 클러스터를 삭제 후 재생성하게 되면 내부 아이피가 변경된다.
   이를 대비해 내부 아이피를 hosts 파일에 등록해 두면 편하다.

   $ sudo vi /etc/hosts
   ......
   <마스터노드의 내부 아이피>   sparki
   ......

   $ spark-submit --master spark://sparki:7077 test.py

5. 스파크 클러스터를 종료 및 삭제한다.

   $ flintrock destroy 클러스터이름

6. 기타 아래 명령을 이용할 수 있다.

   $ flintrock stop test-cluster
   $ flintrock start test-cluster

   $ flintrock describe test-cluster
   $ flintrock add-slaves test-cluster --num-slaves 2
   $ flintrock remove-slaves test-cluster --num-slaves 1
   $ flintrock run-command test-cluster 'sudo yum install -y package'

   $ flintrock copy-file test-cluster /local/path /remote/path